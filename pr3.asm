; Alexander Turenko.
INCLUDE IO\io.asm

VAREQ MACRO A, B
	LOCAL NOT_E
	PUSH BX
	XOR AL, AL
IF TYPE A EQ DWORD
	MOV BX, WORD PTR A
	CMP BX, WORD PTR B
	JNE NOT_E
	MOV BX, WORD PTR A+2
	CMP BX, WORD PTR B+2
	JNE NOT_E
ELSE
	IF TYPE A EQ WORD
		MOV BX, A
		CMP BX, B
		JNE NOT_E
	ELSE
		MOV BL, A
		CMP BL, B
		JNE NOT_E
	ENDIF
ENDIF
	MOV AL, 0FFh
NOT_E:	POP BX
ENDM

STACK SEGMENT STACK
	DW 64 DUP (?)
STACK ENDS

DATA SEGMENT
	XB DB 1
	YB DB 2
	XW DW 1
	YW DW 2
	XD DD 1
	YD DD 2
DATA ENDS

CODE SEGMENT
	ASSUME CS:CODE, SS:STACK, DS:DATA
START:
	MOV AX, DATA
	MOV DS, AX

	XOR AH, AH
	IRP T, <B,W,D>
		VAREQ X&T&, X&T
		OUTWORD AX, 6
		VAREQ X&T&, Y&T
		OUTWORD AX, 6
		NEWLINE
	ENDM
	FINISH
CODE ENDS
END START
