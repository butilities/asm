; Alexander Turenko. 7.27.
INCLUDE IO\io.asm

STACK SEGMENT STACK
	DB 128 DUP (?)
STACK ENDS

CODE SEGMENT
	ASSUME SS:STACK, CS:CODE

; result in AL
; garbage in AH
MM PROC
	PUSH BX

	INCH AL
	CMP AL, '0'
	JB NOT_NUMBER
	CMP AL, '9'
	JA NOT_NUMBER
	SUB AL, '0'
	JMP TO_RET_AL

NOT_NUMBER:
	MOV BL, AL; 'M' or 'm'
	INCH AH; skip '('
	CALL MM
	MOV BH, AL
	INCH AH; skip ','
	CALL MM
	INCH AH; skip ')'

	CMP BL, 'M'
	JNE MIN

	CMP AL, BH
	JA TO_RET_AL
	JMP TO_RET_BH
MIN:
	CMP AL, BH
	JB TO_RET_AL
;	JMP TO_RET_BH

TO_RET_BH:
	MOV AL, BH
TO_RET_AL:
	POP BX
	RET
MM ENDP

START:
	OUTCH '>'
	OUTCH ' '
	CALL MM

	NEWLINE
	OUTCH '<'
	OUTCH ' '
	MOV AH, 0
	OUTINT AX
	FINISH
CODE ENDS
END START
