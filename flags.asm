INCLUDE IO\IO.ASM

STACK SEGMENT STACK
	DB 200 DUP(?)
STACK ENDS

CODE SEGMENT
	ASSUME CS:CODE, SS:STACK

; AX - regisrer with flags bits
OUTFLAG MACRO NAME, POS
	IRPC CH, <NAME>
		OUTCH '&CH'
	ENDM
	OUTCH ':'
	OUTCH ' '

	PUSH AX
	PUSH CX
	MOV CL, POS
	SHR AX, CL
	POP CX
	AND AX, 1
	OUTINT AX
	NEWLINE
	POP AX
ENDM

SEE_FLAGS PROC
	PUSH AX

	PUSHF
	POP AX
	OUTFLAG <CF>, 0
	OUTFLAG <PF>, 2
	OUTFLAG <AF>, 4
	OUTFLAG <ZF>, 6
	OUTFLAG <SF>, 7
	OUTFLAG <TF>, 8
	OUTFLAG <IF>, 9
	OUTFLAG <DF>, 10
	OUTFLAG <OF>, 11

	POP AX
	RET
SEE_FLAGS ENDP

START:	MOV AL, 150
	SUB AL, -56

	CALL SEE_FLAGS
	FINISH
CODE ENDS
END START
